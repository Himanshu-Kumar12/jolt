
@RestController
@RequestMapping(value="/users")
public class UserController {

    @Autowired
    private UserRepository userRepository;
    @Operation(summary = "Update an employee",
            description = "Update an existing employee. The response is updated Employee object with id, first name, and last name.")

    @ApiResponses({
            @ApiResponse(responseCode = "200", content = {@Content(mediaType = "application/json",
                    schema = @Schema(implementation = User.class))}),
            @ApiResponse(responseCode = "404", description = "Employee not found",
//                    content = {@Content(mediaType = "application/json", schema = @Schema(implementation = User.class))}
                    content = @Content(
                            schema = @Schema(implementation = User.class)
                    )
            )})
    @GetMapping("/all")
    public List<User> getAllUsers(@Parameter(
            name = "id",
            description = "Identifier of the ServiceTest",
            required = true
    ) @PathVariable String id,@Parameter(
            name = "fields",
            description = "Comma-separated properties to provide in response",
            required = false
    )
    @RequestParam(required = false) String fields) {
        try{
        return userRepository.findAll();
        }catch (Exception e) {
            return (List<User>) ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Something went wrong");
        }

    }

    @GetMapping("/{id}")
    public User getUserById(@PathVariable Long id) {
        return userRepository.findById(id).orElse(null);
    }

    @PostMapping
    public User createUser(@RequestBody User user) {
        return userRepository.save(user);
    }

    @PutMapping("/{id}")
    public User updateUser(@PathVariable Long id, @RequestBody User user) {
        user.setId(id);
        return userRepository.save(user);
    }

    @DeleteMapping("/{id}")
    public void deleteUser(@PathVariable Long id) {
        userRepository.deleteById(id);
    }
}
